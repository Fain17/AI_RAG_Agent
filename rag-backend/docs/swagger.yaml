basePath: /
definitions:
  models.FileMetadata:
    properties:
      created_at:
        type: string
      filename:
        type: string
      id:
        type: string
      size:
        type: integer
    type: object
  models.FileUploadRequest:
    properties:
      content:
        type: string
      created_at:
        type: string
      deleted:
        type: boolean
      embedding:
        items:
          type: number
        type: array
      filename:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for storing and searching embedded files
  title: RAG File Service API
  version: "1.0"
paths:
  /files/{id}:
    delete:
      parameters:
      - description: File ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a file
      tags:
      - files
    get:
      parameters:
      - description: File ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.FileUploadRequest'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get file by ID
      tags:
      - files
    put:
      consumes:
      - application/json
      parameters:
      - description: File ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Input
        in: body
        name: file
        required: true
        schema:
          $ref: '#/definitions/models.FileUploadRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.FileUploadRequest'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a file
      tags:
      - files
  /files/{id}/restore:
    patch:
      description: Sets the file's deleted flag back to false.
      parameters:
      - description: File UUID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Restore a soft-deleted file
      tags:
      - files
  /files/{id}/soft-delete:
    patch:
      description: Marks a file as deleted without removing it from the database.
      parameters:
      - description: File UUID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Soft delete a file
      tags:
      - files
  /files/date-range:
    get:
      parameters:
      - description: Start date (YYYY-MM-DD)
        in: query
        name: start
        required: true
        type: string
      - description: End date (YYYY-MM-DD)
        in: query
        name: end
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.FileUploadRequest'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get files within a date range
      tags:
      - files
  /files/getall:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.FileUploadRequest'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all files
      tags:
      - files
  /files/metadata:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.FileMetadata'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get lightweight file metadata
      tags:
      - files
  /files/recycle-bin:
    get:
      description: Retrieves files that have been soft-deleted (Recycle Bin).
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.FileUploadRequest'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all soft-deleted files
      tags:
      - files
  /files/search:
    get:
      parameters:
      - description: Search keyword
        in: query
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.FileUploadRequest'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Search files by filename
      tags:
      - files
  /files/upload:
    post:
      consumes:
      - application/json
      description: Store a file and its embedding vector
      parameters:
      - description: Upload Input
        in: body
        name: file
        required: true
        schema:
          $ref: '#/definitions/models.FileUploadRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.FileUploadRequest'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Upload a file
      tags:
      - files
schemes:
- http
swagger: "2.0"
